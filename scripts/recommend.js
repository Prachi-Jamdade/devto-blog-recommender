import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// Load environment variables
config();

// Create the Supabase client
const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY);

// Function to fetch recommended articles using Supabase vector search
async function recommendArticles(userArticleEmbedding) {
  const { data, error } = await supabase
    .rpc('vector_search', {
      query_embedding: userArticleEmbedding,  // Use the user's article embedding here
      top_k: 5  // Return the top 5 most similar articles
    });

  if (error) {
    console.error('Error with vector search:', error);
    return [];
  }

  return data.map(article => ({
    title: article.title,
    url: article.url,
    similarity: article.similarity  // You can include the similarity score if needed
  }));
}

// Sample usage with a user's article embedding
const sampleUserArticleEmbedding = [
    0.0234129, -0.0345885, 0.0205582, 0.0162876, 0.0273903, -0.0192051, 
    0.0038365, -0.0142471, -0.0045123, 0.0087161, 0.0031901, -0.0162704,
    0.0098392, -0.0028524, -0.0148931, 0.0056719, 0.0226345, 0.0097849,
    -0.0035125, 0.0048172, -0.0096215, 0.0135834, -0.0271998, 0.0062386,
    -0.0134565, -0.0226907, 0.0120457, -0.0102394, 0.0041816, 0.0096305,
    0.0136722, 0.0167484, -0.0024624, -0.0103754, 0.0239298, 0.0048835,
    0.0183947, -0.0227482, -0.0053929, 0.0002335, -0.0135974, -0.0147614,
    0.0244879, 0.0101945, 0.0279781, -0.0054729, -0.0185398, 0.0296413,
    0.0111198, 0.0149443, -0.0070554, 0.0190048, -0.0209035, -0.0082521,
    0.0032285, -0.0117964, 0.0055824, 0.0077466, 0.0164443, 0.0220212,
    -0.0272536, -0.0143385, 0.0295518, -0.0029885, 0.0270579, -0.0031296,
    -0.0048992, -0.0225313, -0.0153428, 0.0173773, 0.0130021, 0.0100322,
    -0.0128039, 0.0190736, -0.0203453, -0.0076219, 0.0096454, -0.0117765,
    0.0165792, 0.0273814, -0.0033584, 0.0112198, -0.0155012, 0.0272469,
    -0.0015137, -0.0161271, -0.0043583, -0.0171959, 0.0194041, 0.0143032,
    0.0103698, -0.0226311, 0.0025042, 0.0297981, 0.0220084, 0.0217537,
    -0.0172701, -0.0264935, -0.0061392, 0.0102191, 0.0240472, -0.0030399,
    0.0171592, -0.0084912, 0.0174383, 0.0198683, 0.0288994, -0.0192936,
    -0.0152862, 0.0090133, -0.0135783, -0.0141532, -0.0012769, 0.0292985,
    0.0167241, 0.0164209, -0.0149322, 0.0134603, -0.0083428, 0.0100167,
    0.0212378, -0.0260335, 0.0242762, 0.0222179, 0.0272497, -0.0179523,
    -0.0133341, 0.0232167, 0.0279115, -0.0122376, 0.0032125, -0.0216944,
    0.0158718, 0.0093357, -0.0223817, -0.0184247, 0.0290303, 0.0289061,
    -0.0087809, -0.0269074, 0.0204332, -0.0140526, 0.0296978, -0.0107329,
    0.0201145, -0.0295288, -0.0229841, 0.0199532, -0.0176187, 0.0277191,
    0.0289045, 0.0178933, -0.0182644, -0.0189837, 0.0239324, -0.0103378,
    0.0173572, 0.0165425, 0.0185495, 0.0298362, 0.0290454, 0.0296923,
    0.0291812, -0.0140311, -0.0154461, 0.0203135, -0.0161535, -0.0266311,
    -0.0155619, 0.0171078, -0.0263513, -0.0243887, -0.0214875, 0.0215759,
    0.0171348, -0.0154214, 0.0292134, 0.0191688, 0.0039822, -0.0271623,
    -0.0269165, 0.0210643, -0.0175321, 0.0160193, -0.0172649, 0.0293551,
    -0.0121253, -0.0084936, 0.0234002, -0.0243427, 0.0144576, -0.0227154,
    -0.0249437, -0.0047177, -0.0132474, 0.0282518, 0.0271824, 0.0219535,
    0.0234129, -0.0345885, 0.0205582, 0.0162876, 0.0273903, -0.0192051, 
    0.0038365, -0.0142471, -0.0045123, 0.0087161, 0.0031901, -0.0162704,
    0.0098392, -0.0028524, -0.0148931, 0.0056719, 0.0226345, 0.0097849,
    -0.0035125, 0.0048172, -0.0096215, 0.0135834, -0.0271998, 0.0062386,
    -0.0134565, -0.0226907, 0.0120457, -0.0102394, 0.0041816, 0.0096305,
    0.0136722, 0.0167484, -0.0024624, -0.0103754, 0.0239298, 0.0048835,
    0.0183947, -0.0227482, -0.0053929, 0.0002335, -0.0135974, -0.0147614,
    0.0244879, 0.0101945, 0.0279781, -0.0054729, -0.0185398, 0.0296413,
    0.0111198, 0.0149443, -0.0070554, 0.0190048, -0.0209035, -0.0082521,
    0.0032285, -0.0117964, 0.0055824, 0.0077466, 0.0164443, 0.0220212,
    -0.0272536, -0.0143385, 0.0295518, -0.0029885, 0.0270579, -0.0031296,
    -0.0048992, -0.0225313, -0.0153428, 0.0173773, 0.0130021, 0.0100322,
    -0.0128039, 0.0190736, -0.0203453, -0.0076219, 0.0096454, -0.0117765,
    0.0165792, 0.0273814, -0.0033584, 0.0112198, -0.0155012, 0.0272469,
    -0.0015137, -0.0161271, -0.0043583, -0.0171959, 0.0194041, 0.0143032,
    0.0103698, -0.0226311, 0.0025042, 0.0297981, 0.0220084, 0.0217537,
    -0.0172701, -0.0264935, -0.0061392, 0.0102191, 0.0240472, -0.0030399,
    0.0171592, -0.0084912, 0.0174383, 0.0198683, 0.0288994, -0.0192936,
    -0.0152862, 0.0090133, -0.0135783, -0.0141532, -0.0012769, 0.0292985,
    0.0167241, 0.0164209, -0.0149322, 0.0134603, -0.0083428, 0.0100167,
    0.0212378, -0.0260335, 0.0242762, 0.0222179, 0.0272497, -0.0179523,
    -0.0133341, 0.0232167, 0.0279115, -0.0122376, 0.0032125, -0.0216944,
    0.0158718, 0.0093357, -0.0223817, -0.0184247, 0.0290303, 0.0289061,
    -0.0087809, -0.0269074, 0.0204332, -0.0140526, 0.0296978, -0.0107329,
    0.0201145, -0.0295288, -0.0229841, 0.0199532, -0.0176187, 0.0277191,
    0.0289045, 0.0178933, -0.0182644, -0.0189837, 0.0239324, -0.0103378,
    0.0173572, 0.0165425, 0.0185495, 0.0298362, 0.0290454, 0.0296923,
    0.0291812, -0.0140311, -0.0154461, 0.0203135, -0.0161535, -0.0266311,
    -0.0155619, 0.0171078, -0.0263513, -0.0243887, -0.0214875, 0.0215759,
    0.0171348, -0.0154214, 0.0292134, 0.0191688, 0.0039822, -0.0271623,
    -0.0269165, 0.0210643, -0.0175321, 0.0160193, -0.0172649, 0.0293551
  ];
  

recommendArticles(sampleUserArticleEmbedding)
  .then(recommended => {
    console.log('Recommended Articles:');
    recommended.forEach(article => {
      console.log(`${article.title} - ${article.url}`);
    });
  })
  .catch(err => {
    console.error('Error recommending articles:', err);
  });

export { recommendArticles };
